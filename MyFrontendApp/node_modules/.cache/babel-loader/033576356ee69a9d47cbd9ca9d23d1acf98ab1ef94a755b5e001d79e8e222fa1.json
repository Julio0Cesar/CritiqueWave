{"ast":null,"code":"/*\nimport axiosInstance from '../config/axiosConfig'\n\ninterface LoginData {\n    email: string;\n    senha: string;\n}\n\nexport const login = async (loginData:LoginData): Promise<any> => {\n    try {\n        const response =await axiosInstance.post('/api/auth/login', loginData)\n        return response.data\n    } catch (error) {\n        console.error('Erro ao fazer login: ', error)\n        throw error\n    }\n}\n*/\nimport axios from \"axios\"; //biblioteca para fazer GY,POST,PUT,DELETE\n\nconst API_URL = \"http://localhost:5218/api/auth\";\nexport const login = async (email, senha) => {\n  try {\n    const response = await axios.post(`${API_URL}/login`, {\n      emailDTO: email,\n      senhaDTO: senha\n    });\n    return response.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    console.error(\"Erro de login:\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","login","email","senha","response","post","emailDTO","senhaDTO","data","error","_error$response","_error$response$data","console","message"],"sources":["/home/kintiz/Desktop/Teste/MySolution/MyFrontendApp/src/services/authService.ts"],"sourcesContent":["/*\nimport axiosInstance from '../config/axiosConfig'\n\ninterface LoginData {\n    email: string;\n    senha: string;\n}\n\nexport const login = async (loginData:LoginData): Promise<any> => {\n    try {\n        const response =await axiosInstance.post('/api/auth/login', loginData)\n        return response.data\n    } catch (error) {\n        console.error('Erro ao fazer login: ', error)\n        throw error\n    }\n}\n*/\nimport axios from \"axios\" //biblioteca para fazer GY,POST,PUT,DELETE\n\nconst API_URL = \"http://localhost:5218/api/auth\"\n\nexport const login = async (email: string, senha: string) => {\n    try {\n        const response = await axios.post(`${API_URL}/login`, {\n            emailDTO: email,\n            senhaDTO: senha\n        })\n        return response.data\n    } catch (error: any) {\n        console.error(\"Erro de login:\", error.response?.data?.message || error.message)\n        throw error;\n    }\n}"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,MAAM,OAAO,EAAC;;AAE1B,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,MAAMC,KAAK,GAAG,MAAAA,CAAOC,KAAa,EAAEC,KAAa,KAAK;EACzD,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,QAAQ,EAAE;MAClDM,QAAQ,EAAEJ,KAAK;MACfK,QAAQ,EAAEJ;IACd,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAU,EAAE;IAAA,IAAAC,eAAA,EAAAC,oBAAA;IACjBC,OAAO,CAACH,KAAK,CAAC,gBAAgB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACL,QAAQ,cAAAM,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBE,OAAO,KAAIJ,KAAK,CAACI,OAAO,CAAC;IAC/E,MAAMJ,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}