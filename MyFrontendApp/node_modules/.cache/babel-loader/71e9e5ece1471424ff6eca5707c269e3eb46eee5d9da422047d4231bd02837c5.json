{"ast":null,"code":"var _jsxFileName = \"/home/kintiz/Desktop/Teste/MySolution/MyFrontendApp/src/components/navbar/Nav.tsx\";\nimport { NavLink } from 'react-router-dom';\nimport styles from './Nav.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Nav = () => {\n  if (location.pathname === '/Login') {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: styles.navContent,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.logo,\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.navListItems,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/Login\",\n              className: ({\n                isActive\n              }) => isActive ? styles.active : \"\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: \"/About\",\n              className: ({\n                isActive\n              }) => isActive ? styles.active : \"\",\n              children: \"About\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Nav;\nexport default Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["NavLink","styles","jsxDEV","_jsxDEV","Nav","location","pathname","children","className","navContent","logo","to","fileName","_jsxFileName","lineNumber","columnNumber","navListItems","isActive","active","_c","$RefreshReg$"],"sources":["/home/kintiz/Desktop/Teste/MySolution/MyFrontendApp/src/components/navbar/Nav.tsx"],"sourcesContent":["import { useState } from 'react'\nimport { Link, NavLink, useLocation } from 'react-router-dom'\nimport styles from './Nav.module.scss'\n\nconst Nav = () => {\n\n  if (location.pathname === '/Login'){\n    return null\n  }\n  \n  return (\n    <header>\n      <nav className={styles.navContent}>\n        <div className={styles.logo}>\n          <NavLink to='/'>\n            Home\n          </NavLink>\n        </div>\n        <div className={styles.navListItems}>\n          <ul>\n            <li><NavLink to='/Login' \n            className={({ isActive }) => (isActive ? styles.active : \"\")}\n            >Login</NavLink></li>\n            <li><NavLink to='/About' \n            className={({ isActive }) => (isActive ? styles.active : \"\")}\n            >About</NavLink></li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;\n"],"mappings":";AACA,SAAeA,OAAO,QAAqB,kBAAkB;AAC7D,OAAOC,MAAM,MAAM,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAEhB,IAAIC,QAAQ,CAACC,QAAQ,KAAK,QAAQ,EAAC;IACjC,OAAO,IAAI;EACb;EAEA,oBACEH,OAAA;IAAAI,QAAA,eACEJ,OAAA;MAAKK,SAAS,EAAEP,MAAM,CAACQ,UAAW;MAAAF,QAAA,gBAChCJ,OAAA;QAAKK,SAAS,EAAEP,MAAM,CAACS,IAAK;QAAAH,QAAA,eAC1BJ,OAAA,CAACH,OAAO;UAACW,EAAE,EAAC,GAAG;UAAAJ,QAAA,EAAC;QAEhB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC,eACNZ,OAAA;QAAKK,SAAS,EAAEP,MAAM,CAACe,YAAa;QAAAT,QAAA,eAClCJ,OAAA;UAAAI,QAAA,gBACEJ,OAAA;YAAAI,QAAA,eAAIJ,OAAA,CAACH,OAAO;cAACW,EAAE,EAAC,QAAQ;cACxBH,SAAS,EAAEA,CAAC;gBAAES;cAAS,CAAC,KAAMA,QAAQ,GAAGhB,MAAM,CAACiB,MAAM,GAAG,EAAI;cAAAX,QAAA,EAC5D;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBZ,OAAA;YAAAI,QAAA,eAAIJ,OAAA,CAACH,OAAO;cAACW,EAAE,EAAC,QAAQ;cACxBH,SAAS,EAAEA,CAAC;gBAAES;cAAS,CAAC,KAAMA,QAAQ,GAAGhB,MAAM,CAACiB,MAAM,GAAG,EAAI;cAAAX,QAAA,EAC5D;YAAK;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAACI,EAAA,GA3BIf,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}